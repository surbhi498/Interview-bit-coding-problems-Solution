

bool allocationPossible(int barrier,int n,vector<int> &A,int B ){
int gh=1;
int pages=0;
for(int i=0;i<n;i++){
 if(pages+A[i]>barrier){   
 gh++;
 pages=A[i];   
 }
 else{
 pages+=A[i];    
 }
 }
if(gh>B){
 return false;   
}
return true;
}
int Solution::books(vector<int> &A, int B) {
    int n=A.size();
    if(n<B)
    return -1;
    int min=INT_MIN;
    int sum=0;
    for(int i=0;i<n;i++){
    if(A[i]>min){
    min=A[i];    
    }
    sum+=A[i];
    }
    int low=min;
    int high=sum;
    int res=0;
    while(low<=high){
    int mid=(low+high)>>1;
    if(allocationPossible(mid,n,A,B))
    {
    res=mid;
    high=mid-1;
    }
    else{
        low=mid+1;
    }
    }
    return res;
}

